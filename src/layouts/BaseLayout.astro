---
import "../styles/globals.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
export interface Props { title?: string; description?: string }
const { title = "Emin â€” Portfolio", description = "Engineering for the nanosecond." } = Astro.props as Props;
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <link rel="icon" href="/favicon.svg" />
    <title>{title}</title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preload" as="style" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;500&family=Geist+Mono:wght@100..900&display=swap" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;500&family=Geist+Mono:wght@100..900&display=swap" media="print" onload="this.media='all'" />
    <noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;500&family=Geist+Mono:wght@100..900&display=swap" /></noscript>
  </head>
  <body class="with-grid bg-bg text-text-primary min-h-screen flex flex-col">
    <a href="#main" class="skip-link">Skip to content</a>
    <header class="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-bg/70 border-b border-border px-6 md:px-10 lg:px-14">
      <Header />
    </header>
    <main id="main" class="py-10 px-6 md:px-10 lg:px-14 flex-1">
      <slot />
    </main>
    <footer class="site-footer border-t border-border py-10 px-6 md:px-10 lg:px-14">
      <Footer />
    </footer>

    <script>
      (() => {
        const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
        if (prefersReduced) return;
        const els = document.querySelectorAll('main p, main li, main .panel, main .reveal');
        const observer = new IntersectionObserver((entries) => {
          for (const e of entries) {
            if (e.isIntersecting) {
              e.target.classList.add('in-view');
              observer.unobserve(e.target);
            }
          }
        }, { threshold: 0.1, rootMargin: '0px 0px -10% 0px' });
        els.forEach((el) => {
          el.classList.add('reveal');
          observer.observe(el);
        });
      })();
    </script>
  </body>
</html>



<style is:global>
  /* Site-wide grid background */
  body.with-grid {
    background-color: var(--bg);
    /* Major grid every 120px, fine grid every 24px */
    background-image:
      linear-gradient(to right, rgba(255, 255, 255, 0.03) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.03) 1px, transparent 1px),
      linear-gradient(to right, rgba(255, 255, 255, 0.015) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.015) 1px, transparent 1px);
    background-size:
      120px 120px,
      120px 120px,
      24px 24px,
      24px 24px;
    background-position:
      center,
      center,
      center,
      center;
    background-attachment:
      fixed,
      fixed,
      fixed,
      fixed;
  }

  /* Increase grid visibility slightly when users request more contrast */
  @media (prefers-contrast: more) {
    body.with-grid {
      background-image:
        linear-gradient(to right, rgba(255, 255, 255, 0.045) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(255, 255, 255, 0.045) 1px, transparent 1px),
        linear-gradient(to right, rgba(255, 255, 255, 0.022) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(255, 255, 255, 0.022) 1px, transparent 1px);
    }
  }

  /* Ensure clean print output */
  @media print {
    body.with-grid {
      background: #fff !important;
    }
  }

  /* Footer background depth for visual separation */
  .site-footer {
    background: var(--surface-1);
  }

</style>
